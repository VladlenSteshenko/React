{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeworkJS\\\\react1\\\\src\\\\components\\\\task1.js\",\n  _s = $RefreshSig$();\n// src/components/task1.js\n\nimport React, { useState, useEffect } from \"react\";\n\n// Создайте компонент для отображения данных\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataRow = ({\n  Year,\n  Population\n}) => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: Year\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: Population.toLocaleString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 3\n}, this);\n\n// Создайте компонент для отображения таблицы данных\n_c = DataRow;\nconst DataTable = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"table\", {\n  border: \"1\",\n  children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Population\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: data.map((item, index) => /*#__PURE__*/_jsxDEV(DataRow, {\n      Year: item.Year,\n      Population: item.Population\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n\n// Основной компонент приложения\n_c2 = DataTable;\nconst Task1 = () => {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\").then(response => response.json()).then(data => {\n      setData(data.data);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Population Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Task1, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c3 = Task1;\nexport default Task1;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"DataRow\");\n$RefreshReg$(_c2, \"DataTable\");\n$RefreshReg$(_c3, \"Task1\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DataRow","Year","Population","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","_c","DataTable","data","border","map","item","index","_c2","Task1","_s","setData","fetch","then","response","json","catch","error","console","_c3","$RefreshReg$"],"sources":["C:/HomeworkJS/react1/src/components/task1.js"],"sourcesContent":["// src/components/task1.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// Создайте компонент для отображения данных\r\nconst DataRow = ({ Year, Population }) => (\r\n  <tr>\r\n    <td>{Year}</td>\r\n    <td>{Population.toLocaleString()}</td>\r\n  </tr>\r\n);\r\n\r\n// Создайте компонент для отображения таблицы данных\r\nconst DataTable = ({ data }) => (\r\n  <table border=\"1\">\r\n    <thead>\r\n      <tr>\r\n        <th>Year</th>\r\n        <th>Population</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {data.map((item, index) => (\r\n        <DataRow key={index} Year={item.Year} Population={item.Population} />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\n// Основной компонент приложения\r\nconst Task1 = () => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://datausa.io/api/data?drilldowns=Nation&measures=Population\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setData(data.data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Population Data</h1>\r\n      <DataTable data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task1;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeworkJS\\\\react1\\\\src\\\\components\\\\task3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GraphQLClient, gql } from 'graphql-request';\nimport './task3.css';\n\n// URL API GraphQL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst endpoint = 'https://rickandmortyapi.com/graphql';\nconst client = new GraphQLClient(endpoint);\n\n// Запит для отримання епізодів\nconst EPISODES_QUERY = gql`\n  query episodes {\n    episodes(page: 1) {\n      results {\n        name\n        air_date\n        characters {\n          name\n        }\n      }\n    }\n  }\n`;\n\n// Запит для отримання персонажів\nconst CHARACTERS_QUERY = gql`\n  query characters {\n    characters(page: 1) {\n      results {\n        name\n        gender\n        image\n        episode {\n          name\n          air_date\n        }\n      }\n    }\n  }\n`;\n\n// Компонент для відображення інформації про один епізод\nconst Episode = ({\n  name,\n  air_date,\n  characters\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"episode\",\n  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Air Date:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this), \" \", air_date]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Characters:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 8\n    }, this), \" \", characters.map(char => char.name).join(', ')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 44,\n  columnNumber: 3\n}, this);\n\n// Компонент для відображення списку епізодів\n_c = Episode;\nconst Episodes = ({\n  episodes\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"episodes\",\n  children: episodes.map((episode, index) => /*#__PURE__*/_jsxDEV(Episode, {\n    ...episode\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this);\n\n// Компонент для відображення інформації про одного персонажа\n_c2 = Episodes;\nconst Character = ({\n  name,\n  gender,\n  image,\n  episode\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"character\",\n  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n    src: image,\n    alt: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Gender:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }, this), \" \", gender]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: \"Episodes:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), \" \", episode.map(ep => ep.name).join(', ')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this);\n\n// Компонент для відображення списку персонажів\n_c3 = Character;\nconst Characters = ({\n  characters\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"characters\",\n  children: characters.map((character, index) => /*#__PURE__*/_jsxDEV(Character, {\n    ...character\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 7\n  }, this))\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 72,\n  columnNumber: 3\n}, this);\n\n// Основний компонент програми\n_c4 = Characters;\nconst Task3 = () => {\n  _s();\n  const [episodes, setEpisodes] = useState([]);\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    // Отримання даних про епізоди\n    client.request(EPISODES_QUERY).then(data => setEpisodes(data.episodes.results));\n\n    // Отримання даних про персонажів\n    client.request(CHARACTERS_QUERY).then(data => setCharacters(data.characters.results));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Rick and Morty Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Episodes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Episodes, {\n      episodes: episodes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Characters, {\n      characters: characters\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Task3, \"L12hYV1QHZ9AdqljOiEfGNwcuaA=\");\n_c5 = Task3;\nexport default Task3;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Episode\");\n$RefreshReg$(_c2, \"Episodes\");\n$RefreshReg$(_c3, \"Character\");\n$RefreshReg$(_c4, \"Characters\");\n$RefreshReg$(_c5, \"Task3\");","map":{"version":3,"names":["React","useState","useEffect","GraphQLClient","gql","jsxDEV","_jsxDEV","endpoint","client","EPISODES_QUERY","CHARACTERS_QUERY","Episode","name","air_date","characters","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","char","join","_c","Episodes","episodes","episode","index","_c2","Character","gender","image","src","alt","ep","_c3","Characters","character","_c4","Task3","_s","setEpisodes","setCharacters","request","then","data","results","_c5","$RefreshReg$"],"sources":["C:/HomeworkJS/react1/src/components/task3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GraphQLClient, gql } from 'graphql-request';\r\nimport './task3.css';\r\n\r\n// URL API GraphQL\r\nconst endpoint = 'https://rickandmortyapi.com/graphql';\r\n\r\nconst client = new GraphQLClient(endpoint);\r\n\r\n// Запит для отримання епізодів\r\nconst EPISODES_QUERY = gql`\r\n  query episodes {\r\n    episodes(page: 1) {\r\n      results {\r\n        name\r\n        air_date\r\n        characters {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Запит для отримання персонажів\r\nconst CHARACTERS_QUERY = gql`\r\n  query characters {\r\n    characters(page: 1) {\r\n      results {\r\n        name\r\n        gender\r\n        image\r\n        episode {\r\n          name\r\n          air_date\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// Компонент для відображення інформації про один епізод\r\nconst Episode = ({ name, air_date, characters }) => (\r\n  <div className=\"episode\">\r\n    <h3>{name}</h3>\r\n    <p><strong>Air Date:</strong> {air_date}</p>\r\n    <p><strong>Characters:</strong> {characters.map(char => char.name).join(', ')}</p>\r\n  </div>\r\n);\r\n\r\n// Компонент для відображення списку епізодів\r\nconst Episodes = ({ episodes }) => (\r\n  <div className=\"episodes\">\r\n    {episodes.map((episode, index) => (\r\n      <Episode key={index} {...episode} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\n// Компонент для відображення інформації про одного персонажа\r\nconst Character = ({ name, gender, image, episode }) => (\r\n  <div className=\"character\">\r\n    <img src={image} alt={name} />\r\n    <h3>{name}</h3>\r\n    <p><strong>Gender:</strong> {gender}</p>\r\n    <p><strong>Episodes:</strong> {episode.map(ep => ep.name).join(', ')}</p>\r\n  </div>\r\n);\r\n\r\n// Компонент для відображення списку персонажів\r\nconst Characters = ({ characters }) => (\r\n  <div className=\"characters\">\r\n    {characters.map((character, index) => (\r\n      <Character key={index} {...character} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\n// Основний компонент програми\r\nconst Task3 = () => {\r\n  const [episodes, setEpisodes] = useState([]);\r\n  const [characters, setCharacters] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Отримання даних про епізоди\r\n    client.request(EPISODES_QUERY).then(data => setEpisodes(data.episodes.results));\r\n\r\n    // Отримання даних про персонажів\r\n    client.request(CHARACTERS_QUERY).then(data => setCharacters(data.characters.results));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>Rick and Morty Data</h1>\r\n      <h2>Episodes</h2>\r\n      <Episodes episodes={episodes} />\r\n      <h2>Characters</h2>\r\n      <Characters characters={characters} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task3;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,EAAEC,GAAG,QAAQ,iBAAiB;AACpD,OAAO,aAAa;;AAEpB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,qCAAqC;AAEtD,MAAMC,MAAM,GAAG,IAAIL,aAAa,CAACI,QAAQ,CAAC;;AAE1C;AACA,MAAME,cAAc,GAAGL,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMM,gBAAgB,GAAGN,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,MAAMO,OAAO,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAW,CAAC,kBAC7CR,OAAA;EAAKS,SAAS,EAAC,SAAS;EAAAC,QAAA,gBACtBV,OAAA;IAAAU,QAAA,EAAKJ;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,eACfd,OAAA;IAAAU,QAAA,gBAAGV,OAAA;MAAAU,QAAA,EAAQ;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAACP,QAAQ;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eAC5Cd,OAAA;IAAAU,QAAA,gBAAGV,OAAA;MAAAU,QAAA,EAAQ;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAACN,UAAU,CAACO,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACV,IAAI,CAAC,CAACW,IAAI,CAAC,IAAI,CAAC;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAC/E,CACN;;AAED;AAAAI,EAAA,GARMb,OAAO;AASb,MAAMc,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,kBAC5BpB,OAAA;EAAKS,SAAS,EAAC,UAAU;EAAAC,QAAA,EACtBU,QAAQ,CAACL,GAAG,CAAC,CAACM,OAAO,EAAEC,KAAK,kBAC3BtB,OAAA,CAACK,OAAO;IAAA,GAAiBgB;EAAO,GAAlBC,KAAK;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAgB,CACpC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACN;;AAED;AAAAS,GAAA,GARMJ,QAAQ;AASd,MAAMK,SAAS,GAAGA,CAAC;EAAElB,IAAI;EAAEmB,MAAM;EAAEC,KAAK;EAAEL;AAAQ,CAAC,kBACjDrB,OAAA;EAAKS,SAAS,EAAC,WAAW;EAAAC,QAAA,gBACxBV,OAAA;IAAK2B,GAAG,EAAED,KAAM;IAACE,GAAG,EAAEtB;EAAK;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,eAC9Bd,OAAA;IAAAU,QAAA,EAAKJ;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC,eACfd,OAAA;IAAAU,QAAA,gBAAGV,OAAA;MAAAU,QAAA,EAAQ;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAACW,MAAM;EAAA;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACxCd,OAAA;IAAAU,QAAA,gBAAGV,OAAA;MAAAU,QAAA,EAAQ;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,EAACO,OAAO,CAACN,GAAG,CAACc,EAAE,IAAIA,EAAE,CAACvB,IAAI,CAAC,CAACW,IAAI,CAAC,IAAI,CAAC;EAAA;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACtE,CACN;;AAED;AAAAgB,GAAA,GATMN,SAAS;AAUf,MAAMO,UAAU,GAAGA,CAAC;EAAEvB;AAAW,CAAC,kBAChCR,OAAA;EAAKS,SAAS,EAAC,YAAY;EAAAC,QAAA,EACxBF,UAAU,CAACO,GAAG,CAAC,CAACiB,SAAS,EAAEV,KAAK,kBAC/BtB,OAAA,CAACwB,SAAS;IAAA,GAAiBQ;EAAS,GAApBV,KAAK;IAAAX,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAkB,CACxC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACN;;AAED;AAAAmB,GAAA,GARMF,UAAU;AAShB,MAAMG,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACf,QAAQ,EAAEgB,WAAW,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,UAAU,EAAE6B,aAAa,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAM,MAAM,CAACoC,OAAO,CAACnC,cAAc,CAAC,CAACoC,IAAI,CAACC,IAAI,IAAIJ,WAAW,CAACI,IAAI,CAACpB,QAAQ,CAACqB,OAAO,CAAC,CAAC;;IAE/E;IACAvC,MAAM,CAACoC,OAAO,CAAClC,gBAAgB,CAAC,CAACmC,IAAI,CAACC,IAAI,IAAIH,aAAa,CAACG,IAAI,CAAChC,UAAU,CAACiC,OAAO,CAAC,CAAC;EACvF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzC,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBV,OAAA;MAAAU,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5Bd,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBd,OAAA,CAACmB,QAAQ;MAACC,QAAQ,EAAEA;IAAS;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChCd,OAAA;MAAAU,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBd,OAAA,CAAC+B,UAAU;MAACvB,UAAU,EAAEA;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACqB,EAAA,CArBID,KAAK;AAAAQ,GAAA,GAALR,KAAK;AAuBX,eAAeA,KAAK;AAAC,IAAAhB,EAAA,EAAAK,GAAA,EAAAO,GAAA,EAAAG,GAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAzB,EAAA;AAAAyB,YAAA,CAAApB,GAAA;AAAAoB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAV,GAAA;AAAAU,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\HomeworkJS\\\\react2\\\\src\\\\components\\\\task4.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordConfirm = ({\n  min = 2\n}) => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n    validatePasswords(newPassword, confirmPassword);\n  };\n  const handleConfirmPasswordChange = e => {\n    const newConfirmPassword = e.target.value;\n    setConfirmPassword(newConfirmPassword);\n    validatePasswords(password, newConfirmPassword);\n  };\n  const validatePasswords = (password, confirmPassword) => {\n    if (password.length < min) {\n      setError(`Password must be at least ${min} characters long.`);\n    } else if (password !== confirmPassword) {\n      setError(\"Passwords do not match.\");\n    } else {\n      setError(\"\");\n    }\n  };\n  const isInvalid = error !== \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          style: {\n            border: isInvalid ? \"5px solid red\" : \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Confirm Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: handleConfirmPasswordChange,\n          style: {\n            border: isInvalid ? \"5px solid red\" : \"\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), isInvalid && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordConfirm, \"gbm+5yVTWa+gpKBcAOJRj8eQpB8=\");\n_c = PasswordConfirm;\nexport default PasswordConfirm;\nvar _c;\n$RefreshReg$(_c, \"PasswordConfirm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","PasswordConfirm","min","_s","password","setPassword","confirmPassword","setConfirmPassword","error","setError","handlePasswordChange","e","newPassword","target","value","validatePasswords","handleConfirmPasswordChange","newConfirmPassword","length","isInvalid","children","type","onChange","style","border","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["C:/HomeworkJS/react2/src/components/task4.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst PasswordConfirm = ({ min = 2 }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setPassword(newPassword);\r\n    validatePasswords(newPassword, confirmPassword);\r\n  };\r\n\r\n  const handleConfirmPasswordChange = (e) => {\r\n    const newConfirmPassword = e.target.value;\r\n    setConfirmPassword(newConfirmPassword);\r\n    validatePasswords(password, newConfirmPassword);\r\n  };\r\n\r\n  const validatePasswords = (password, confirmPassword) => {\r\n    if (password.length < min) {\r\n      setError(`Password must be at least ${min} characters long.`);\r\n    } else if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match.\");\r\n    } else {\r\n      setError(\"\");\r\n    }\r\n  };\r\n\r\n  const isInvalid = error !== \"\";\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            style={{ border: isInvalid ? \"5px solid red\" : \"\" }}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Confirm Password:\r\n          <input\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={handleConfirmPasswordChange}\r\n            style={{ border: isInvalid ? \"5px solid red\" : \"\" }}\r\n          />\r\n        </label>\r\n      </div>\r\n      {isInvalid && <div style={{ color: \"red\" }}>{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordConfirm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
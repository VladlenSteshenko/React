{"ast":null,"code":"function jwtDecode(token) {\n  try {\n    // Перевірка, що токен є рядком і має три частини, розділені крапками\n    if (typeof token !== \"string\" || token.split(\".\").length !== 3) {\n      return undefined;\n    }\n\n    // Розділяємо токен на три частини\n    const parts = token.split(\".\");\n\n    // Виділяємо середню частину\n    const middlePart = parts[1];\n\n    // Розкодовуємо середню частину з кодування Base64\n    const decodedBase64 = atob(middlePart);\n\n    // Парсимо JSON\n    const json = JSON.parse(decodedBase64);\n\n    // Повертаємо розкодовані дані\n    return json;\n  } catch (error) {\n    // У випадку помилки повертаємо undefined\n    return undefined;\n  }\n}\n\n// Приклади використання\nfunction Testtoken1() {\n  const token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiaWQiOiI2MzIyMDVhZWI3NGUxZjVmMmVjMWEzMjAiLCJsb2dpbiI6InRlc3Q0NTciLCJhY2wiOlsiNjMyMjA1YWViNzRlMWY1ZjJlYzFhMzIwIiwidXNlciJdfSwiaWF0IjoxNjY4MjcyMTYzfQ.rxV1ki9G6LjT2IPWcqkMeTi_1K9sb3Si8vLB6UDAGdw\";\n  console.log(jwtDecode(token));\n  //{\n  //  \"sub\": {\n  //    \"id\": \"632205aeb74e1f5f2ec1a320\",\n  //    \"login\": \"test457\",\n  //    \"acl\": [\n  //      \"632205aeb74e1f5f2ec1a320\",\n  //      \"user\"\n  //    ]\n  //  },\n  //  \"iat\": 1668272163\n  //}\n\n  try {\n    console.log(jwtDecode()); // undefined\n    console.log(jwtDecode(\"дічь\")); // undefined\n    console.log(jwtDecode(\"ey.ey.ey\")); // undefined\n\n    console.log(\"до сюди допрацювало, а значить jwtDecode не матюкався в консоль червоним кольором\");\n  } finally {\n    console.log(\"ДЗ, мабуть, закінчено\");\n  }\n}\n_c = Testtoken1;\nexport { jwtDecode, Testtoken1 };\nvar _c;\n$RefreshReg$(_c, \"Testtoken1\");","map":{"version":3,"names":["jwtDecode","token","split","length","undefined","parts","middlePart","decodedBase64","atob","json","JSON","parse","error","Testtoken1","console","log","_c","$RefreshReg$"],"sources":["C:/courses/React/react2+3/src/components/jwttoken.js"],"sourcesContent":["function jwtDecode(token) {\r\n  try {\r\n    // Перевірка, що токен є рядком і має три частини, розділені крапками\r\n    if (typeof token !== \"string\" || token.split(\".\").length !== 3) {\r\n      return undefined;\r\n    }\r\n\r\n    // Розділяємо токен на три частини\r\n    const parts = token.split(\".\");\r\n\r\n    // Виділяємо середню частину\r\n    const middlePart = parts[1];\r\n\r\n    // Розкодовуємо середню частину з кодування Base64\r\n    const decodedBase64 = atob(middlePart);\r\n\r\n    // Парсимо JSON\r\n    const json = JSON.parse(decodedBase64);\r\n\r\n    // Повертаємо розкодовані дані\r\n    return json;\r\n  } catch (error) {\r\n    // У випадку помилки повертаємо undefined\r\n    return undefined;\r\n  }\r\n}\r\n\r\n// Приклади використання\r\nfunction Testtoken1() {\r\n  const token =\r\n    \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOnsiaWQiOiI2MzIyMDVhZWI3NGUxZjVmMmVjMWEzMjAiLCJsb2dpbiI6InRlc3Q0NTciLCJhY2wiOlsiNjMyMjA1YWViNzRlMWY1ZjJlYzFhMzIwIiwidXNlciJdfSwiaWF0IjoxNjY4MjcyMTYzfQ.rxV1ki9G6LjT2IPWcqkMeTi_1K9sb3Si8vLB6UDAGdw\";\r\n  console.log(jwtDecode(token));\r\n  //{\r\n  //  \"sub\": {\r\n  //    \"id\": \"632205aeb74e1f5f2ec1a320\",\r\n  //    \"login\": \"test457\",\r\n  //    \"acl\": [\r\n  //      \"632205aeb74e1f5f2ec1a320\",\r\n  //      \"user\"\r\n  //    ]\r\n  //  },\r\n  //  \"iat\": 1668272163\r\n  //}\r\n\r\n  try {\r\n    console.log(jwtDecode()); // undefined\r\n    console.log(jwtDecode(\"дічь\")); // undefined\r\n    console.log(jwtDecode(\"ey.ey.ey\")); // undefined\r\n\r\n    console.log(\r\n      \"до сюди допрацювало, а значить jwtDecode не матюкався в консоль червоним кольором\"\r\n    );\r\n  } finally {\r\n    console.log(\"ДЗ, мабуть, закінчено\");\r\n  }\r\n}\r\n\r\nexport { jwtDecode, Testtoken1 };\r\n"],"mappings":"AAAA,SAASA,SAASA,CAACC,KAAK,EAAE;EACxB,IAAI;IACF;IACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;MAC9D,OAAOC,SAAS;IAClB;;IAEA;IACA,MAAMC,KAAK,GAAGJ,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;;IAE9B;IACA,MAAMI,UAAU,GAAGD,KAAK,CAAC,CAAC,CAAC;;IAE3B;IACA,MAAME,aAAa,GAAGC,IAAI,CAACF,UAAU,CAAC;;IAEtC;IACA,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACJ,aAAa,CAAC;;IAEtC;IACA,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd;IACA,OAAOR,SAAS;EAClB;AACF;;AAEA;AACA,SAASS,UAAUA,CAAA,EAAG;EACpB,MAAMZ,KAAK,GACT,iPAAiP;EACnPa,OAAO,CAACC,GAAG,CAACf,SAAS,CAACC,KAAK,CAAC,CAAC;EAC7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAI;IACFa,OAAO,CAACC,GAAG,CAACf,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1Bc,OAAO,CAACC,GAAG,CAACf,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAChCc,OAAO,CAACC,GAAG,CAACf,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;;IAEpCc,OAAO,CAACC,GAAG,CACT,mFACF,CAAC;EACH,CAAC,SAAS;IACRD,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;EACtC;AACF;AAACC,EAAA,GA3BQH,UAAU;AA6BnB,SAASb,SAAS,EAAEa,UAAU;AAAG,IAAAG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
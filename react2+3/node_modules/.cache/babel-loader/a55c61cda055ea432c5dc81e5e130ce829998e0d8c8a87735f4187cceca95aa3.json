{"ast":null,"code":"var _jsxFileName = \"C:\\\\courses\\\\React\\\\react2+3\\\\src\\\\components\\\\task3.3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecondsTimer = ({\n  seconds\n}) => /*#__PURE__*/_jsxDEV(\"h2\", {\n  children: seconds\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 3,\n  columnNumber: 39\n}, this);\n_c = SecondsTimer;\nconst TimerContainer = ({\n  seconds,\n  refresh,\n  render\n}) => {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const Render = render;\n  useEffect(() => {\n    const startTime = Date.now();\n    const interval = setInterval(() => {\n      const currentTime = Date.now();\n      setElapsedTime(Math.floor((currentTime - startTime) / 1000));\n    }, refresh);\n    return () => clearInterval(interval);\n  }, [refresh]);\n  const remainingSeconds = Math.max(seconds - elapsedTime, 0);\n  return /*#__PURE__*/_jsxDEV(Render, {\n    seconds: remainingSeconds\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n};\n_s(TimerContainer, \"qjUdXD44Xrq0jX4C+PAAtl9dcYI=\");\n_c2 = TimerContainer;\nexport default TimerContainer;\nexport { SecondsTimer };\nvar _c, _c2;\n$RefreshReg$(_c, \"SecondsTimer\");\n$RefreshReg$(_c2, \"TimerContainer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SecondsTimer","seconds","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TimerContainer","refresh","render","_s","elapsedTime","setElapsedTime","Render","startTime","Date","now","interval","setInterval","currentTime","Math","floor","clearInterval","remainingSeconds","max","_c2","$RefreshReg$"],"sources":["C:/courses/React/react2+3/src/components/task3.3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst SecondsTimer = ({ seconds }) => <h2>{seconds}</h2>;\r\n\r\nconst TimerContainer = ({ seconds, refresh, render }) => {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const Render = render;\r\n\r\n  useEffect(() => {\r\n    const startTime = Date.now();\r\n    const interval = setInterval(() => {\r\n      const currentTime = Date.now();\r\n      setElapsedTime(Math.floor((currentTime - startTime) / 1000));\r\n    }, refresh);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refresh]);\r\n\r\n  const remainingSeconds = Math.max(seconds - elapsedTime, 0);\r\n\r\n  return <Render seconds={remainingSeconds} />;\r\n};\r\n\r\nexport default TimerContainer;\r\nexport { SecondsTimer };\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAQ,CAAC,kBAAKF,OAAA;EAAAG,QAAA,EAAKD;AAAO;EAAAE,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAAK,CAAC;AAACC,EAAA,GAAnDP,YAAY;AAElB,MAAMQ,cAAc,GAAGA,CAAC;EAAEP,OAAO;EAAEQ,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMkB,MAAM,GAAGJ,MAAM;EAErBb,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,MAAMC,WAAW,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC;MAC9BJ,cAAc,CAACQ,IAAI,CAACC,KAAK,CAAC,CAACF,WAAW,GAAGL,SAAS,IAAI,IAAI,CAAC,CAAC;IAC9D,CAAC,EAAEN,OAAO,CAAC;IAEX,OAAO,MAAMc,aAAa,CAACL,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;EAEb,MAAMe,gBAAgB,GAAGH,IAAI,CAACI,GAAG,CAACxB,OAAO,GAAGW,WAAW,EAAE,CAAC,CAAC;EAE3D,oBAAOb,OAAA,CAACe,MAAM;IAACb,OAAO,EAAEuB;EAAiB;IAAArB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9C,CAAC;AAACK,EAAA,CAjBIH,cAAc;AAAAkB,GAAA,GAAdlB,cAAc;AAmBpB,eAAeA,cAAc;AAC7B,SAASR,YAAY;AAAG,IAAAO,EAAA,EAAAmB,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
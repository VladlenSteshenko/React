{"ast":null,"code":"var _jsxFileName = \"C:\\\\courses\\\\React\\\\react2\\\\src\\\\components\\\\task3.3.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Timer from './task3.1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimerContainer = ({\n  seconds,\n  refresh,\n  render\n}) => {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [isPaused, setIsPaused] = useState(false);\n  const Render = render;\n  useEffect(() => {\n    const startTime = Date.now();\n    const interval = setInterval(() => {\n      if (!isPaused) {\n        const currentTime = Date.now();\n        setElapsedTime(Math.floor((currentTime - startTime) / 1000));\n      }\n    }, refresh);\n    return () => clearInterval(interval);\n  }, [refresh, isPaused]);\n  const remainingSeconds = Math.max(seconds - elapsedTime, 0);\n  const handlePauseResume = () => {\n    setIsPaused(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(Render, {\n    seconds: remainingSeconds,\n    isPaused: isPaused,\n    onPauseResume: handlePauseResume\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TimerContainer, \"z9ESXenbHOLSxdDjmjTewApd6Ic=\");\n_c = TimerContainer;\nexport default TimerContainer;\nvar _c;\n$RefreshReg$(_c, \"TimerContainer\");","map":{"version":3,"names":["React","useState","useEffect","Timer","jsxDEV","_jsxDEV","TimerContainer","seconds","refresh","render","_s","elapsedTime","setElapsedTime","isPaused","setIsPaused","Render","startTime","Date","now","interval","setInterval","currentTime","Math","floor","clearInterval","remainingSeconds","max","handlePauseResume","prev","onPauseResume","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/courses/React/react2/src/components/task3.3.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Timer from './task3.1';\r\n\r\nconst TimerContainer = ({ seconds, refresh, render }) => {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [isPaused, setIsPaused] = useState(false);\r\n  const Render = render;\r\n\r\n  useEffect(() => {\r\n    const startTime = Date.now();\r\n    const interval = setInterval(() => {\r\n      if (!isPaused) {\r\n        const currentTime = Date.now();\r\n        setElapsedTime(Math.floor((currentTime - startTime) / 1000));\r\n      }\r\n    }, refresh);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [refresh, isPaused]);\r\n\r\n  const remainingSeconds = Math.max(seconds - elapsedTime, 0);\r\n\r\n  const handlePauseResume = () => {\r\n    setIsPaused((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <Render\r\n      seconds={remainingSeconds}\r\n      isPaused={isPaused}\r\n      onPauseResume={handlePauseResume}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TimerContainer;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMc,MAAM,GAAGN,MAAM;EAErBP,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC5B,MAAMC,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC,IAAI,CAACP,QAAQ,EAAE;QACb,MAAMQ,WAAW,GAAGJ,IAAI,CAACC,GAAG,CAAC,CAAC;QAC9BN,cAAc,CAACU,IAAI,CAACC,KAAK,CAAC,CAACF,WAAW,GAAGL,SAAS,IAAI,IAAI,CAAC,CAAC;MAC9D;IACF,CAAC,EAAER,OAAO,CAAC;IAEX,OAAO,MAAMgB,aAAa,CAACL,QAAQ,CAAC;EACtC,CAAC,EAAE,CAACX,OAAO,EAAEK,QAAQ,CAAC,CAAC;EAEvB,MAAMY,gBAAgB,GAAGH,IAAI,CAACI,GAAG,CAACnB,OAAO,GAAGI,WAAW,EAAE,CAAC,CAAC;EAE3D,MAAMgB,iBAAiB,GAAGA,CAAA,KAAM;IAC9Bb,WAAW,CAAEc,IAAI,IAAK,CAACA,IAAI,CAAC;EAC9B,CAAC;EAED,oBACEvB,OAAA,CAACU,MAAM;IACLR,OAAO,EAAEkB,gBAAiB;IAC1BZ,QAAQ,EAAEA,QAAS;IACnBgB,aAAa,EAAEF;EAAkB;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEN,CAAC;AAACvB,EAAA,CA9BIJ,cAAc;AAAA4B,EAAA,GAAd5B,cAAc;AAgCpB,eAAeA,cAAc;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}